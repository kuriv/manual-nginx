{"./":{"url":"./","title":"Nginx","keywords":"","body":"Nginx Nginx 是一个高性能的 HTTP 和反向代理服务器。 "},"docs/安装使用.html":{"url":"docs/安装使用.html","title":"安装使用","keywords":"","body":"安装使用 执行下面的命令，在 Ubuntu 系统中安装 Nginx 服务器。 sudo apt-get install nginx 安装完成后，执行下面的命令检查 Nginx 服务运行状态。 sudo systemctl status nginx "},"docs/常用命令.html":{"url":"docs/常用命令.html","title":"常用命令","keywords":"","body":"常用命令 执行下面的命令，查看 Nginx 服务器版本号。 nginx -v 执行下面的命令，关闭 Nginx 服务。 sudo nginx -s stop 执行下面的命令，启动 Nginx 服务。 sudo nginx 执行下面的命令，重新加载 Nginx 服务。 sudo nginx -s reload "},"docs/配置文件.html":{"url":"docs/配置文件.html","title":"配置文件","keywords":"","body":"配置文件 在 Ubuntu 系统中， /etc/nginx/nginx.conf 是 Nginx 的主配置文件，主要负责全局设置和基础配置。 user www-data; worker_processes auto; pid /run/nginx.pid; error_log /var/log/nginx/error.log; include /etc/nginx/modules-enabled/*.conf; events { worker_connections 768; # multi_accept on; } http { ## # Basic Settings ## sendfile on; tcp_nopush on; types_hash_max_size 2048; # server_tokens off; # server_names_hash_bucket_size 64; # server_name_in_redirect off; include /etc/nginx/mime.types; default_type application/octet-stream; ## # SSL Settings ## ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE ssl_prefer_server_ciphers on; ## # Logging Settings ## access_log /var/log/nginx/access.log; ## # Gzip Settings ## gzip on; # gzip_vary on; # gzip_proxied any; # gzip_comp_level 6; # gzip_buffers 16 8k; # gzip_http_version 1.1; # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; ## # Virtual Host Configs ## include /etc/nginx/conf.d/*.conf; include /etc/nginx/sites-enabled/*; } #mail { # # See sample authentication script at: # # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript # # # auth_http localhost/auth.php; # # pop3_capabilities \"TOP\" \"USER\"; # # imap_capabilities \"IMAP4rev1\" \"UIDPLUS\"; # # server { # listen localhost:110; # protocol pop3; # proxy on; # } # # server { # listen localhost:143; # protocol imap; # proxy on; # } #} 而 /etc/nginx/sites-enabled/default 主要用于设置监听端口、默认页面及错误处理等具体服务配置。 ## # You should look at the following URL's in order to grasp a solid understanding # of Nginx configuration files in order to fully unleash the power of Nginx. # https://www.nginx.com/resources/wiki/start/ # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/ # https://wiki.debian.org/Nginx/DirectoryStructure # # In most cases, administrators will remove this file from sites-enabled/ and # leave it as reference inside of sites-available where it will continue to be # updated by the nginx packaging team. # # This file will automatically load configuration files provided by other # applications, such as Drupal or Wordpress. These applications will be made # available underneath a path with that package name, such as /drupal8. # # Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples. ## # Default server configuration # server { listen 80 default_server; listen [::]:80 default_server; # SSL configuration # # listen 443 ssl default_server; # listen [::]:443 ssl default_server; # # Note: You should disable gzip for SSL traffic. # See: https://bugs.debian.org/773332 # # Read up on ssl_ciphers to ensure a secure configuration. # See: https://bugs.debian.org/765782 # # Self signed certs generated by the ssl-cert package # Don't use them in a production server! # # include snippets/snakeoil.conf; root /var/www/html; # Add index.php to the list if you are using PHP index index.html index.htm index.nginx-debian.html; server_name _; location / { # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ =404; } # pass PHP scripts to FastCGI server # #location ~ \\.php$ { # include snippets/fastcgi-php.conf; # # # With php-fpm (or other unix sockets): # fastcgi_pass unix:/run/php/php7.4-fpm.sock; # # With php-cgi (or other tcp sockets): # fastcgi_pass 127.0.0.1:9000; #} # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } # Virtual Host configuration for example.com # # You can move that to a different file under sites-available/ and symlink that # to sites-enabled/ to enable it. # #server { # listen 80; # listen [::]:80; # # server_name example.com; # # root /var/www/example.com; # index index.html; # # location / { # try_files $uri $uri/ =404; # } #} "},"docs/虚拟主机.html":{"url":"docs/虚拟主机.html","title":"虚拟主机","keywords":"","body":"虚拟主机 修改 /etc/nginx/sites-enabled/default 配置文件如下，通过端口号访问指定的 Web 服务。 server { listen 8001; server_name 127.0.0.1; root /var/www/html/site-a; } server { listen 8002; server_name 127.0.0.1; root /var/www/html/site-b; } "},"docs/反向代理.html":{"url":"docs/反向代理.html","title":"反向代理","keywords":"","body":"反向代理 "},"docs/负载均衡.html":{"url":"docs/负载均衡.html","title":"负载均衡","keywords":"","body":"负载均衡 "},"docs/高可用部署.html":{"url":"docs/高可用部署.html","title":"高可用部署","keywords":"","body":"高可用部署 "}}